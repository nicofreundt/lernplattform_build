{"version":3,"sources":["auth.js","components/header/Header.js","components/taskCard/TaskCard.js","components/taskRow/TaskRow.js","components/taskPage/TaskPage.js","components/newTask/newTask.js","components/content/Content.js","components/menu/Menu.js","App.js","components/login/Login.js","components/protectedRoute/ProtectedRoute.js","serviceWorker.js","index.js"],"names":["authenticated","this","state","user","cb","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","result","status","localStorage","setItem","userID","alert","mail","console","log","message","clear","withRouter","props","className","ThemeProvider","theme","size","value","Typography","variant","align","style","display","justifyContent","flexDirection","alignItems","marginRight","variable","Switch","color","onChange","func","Button","onClick","newTask","auth","logout","history","push","TaskCard","f","active","id","Text","TaskRow","scrollLeft","element","change","duration","start","currentTime","Math","easeInOutQuad","t","b","c","d","animateScroll","val","setTimeout","navRef","React","createRef","leftButton","rightButton","handleNav","direction","current","ArrowBackIos","ref","tasks","filter","task","Topic","topic","map","a","ID","key","statusArr","get","ArrowForwardIos","Component","TaskPage","useState","checkedState","setCheckedState","loading","setLoading","images","setImages","useStyles","makeStyles","root","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","marginLeft","setStatus","taskID","useEffect","getImages","arr","i","url","imagePath","getStatus","getItem","classes","buttonClassname","clsx","length","width","height","ArrowBack","Fab","aria-label","event","CircularProgress","formControl","minWidth","selectEmpty","NewTask","fileName","setFileName","fileType","setFileType","fileContent","setFileContent","level","setLevel","thema","setThema","uploading","setUploading","Map","test","setTest","test2","preventDefault","FormData","entries","type","includes","append","uploadImages","r","imageNames","options","Titel","Level","Thema","Images","onDrop","useCallback","acceptedFiles","forEach","file","name","split","fi","set","reader","FileReader","onabort","onerror","onload","binaryStr","readAsText","useDropzone","getRootProps","getInputProps","closeNewTask","Close","PictureAsPdf","fontSize","Description","FormControl","InputLabel","Select","labelId","target","MenuItem","onSubmit","e","Array","from","Image","CircularProgressWithLabel","Box","bottom","right","component","round","Content","selectedTask","setState","selected","unselectTask","x","isLoading","updated","aufgaben","arrS","arrM","levelNames","helpArray","helpArrayS","st","s","numPos","myMap","role","hidden","index","aria-labelledby","other","alignContent","textAlign","a11yProps","paddingTop","tabs","borderRight","palette","divider","Menu","setValue","Tabs","orientation","newValue","Tab","label","App","themeVariable","darkTheme","createMuiTheme","primary","main","dark","secondary","lightTheme","document","classList","add","setNewTask","remove","Login","setUsername","setPassword","setMail","switchStatus","setSwitchStatus","login","to","pathname","location","checked","AccountCircle","TextField","Lock","onKeyUp","Mail","signup","ProtectedRoute","rest","render","Boolean","window","hostname","match","ReactDOM","exact","path","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2aa084a0.chunk.js","sourcesContent":["\r\nexport var authenticated = false;\r\n\r\nclass Auth {\r\n    constructor() {\r\n\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n\r\n    login(cb, username, password) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ username, password })\r\n        }\r\n\r\n        const res = fetch('https://nicofreundt.ddns.net:3001/users', requestOptions).then(res => res.json())\r\n\r\n        res.then((result) => {\r\n            if(result.status) {\r\n                authenticated = result.status;\r\n                localStorage.setItem('user', result.username);\r\n                localStorage.setItem('userID', result.userID);\r\n            } else {\r\n                authenticated = false;\r\n                alert(\"Falsche Eingabe!\")\r\n            }\r\n            cb();\r\n        })\r\n    }\r\n\r\n    signup(cb, username, password, mail) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ username, password, mail })\r\n        }\r\n\r\n        const res = fetch('https://nicofreundt.ddns.net:3001/users/new', requestOptions).then(res => res.json())\r\n\r\n        res.then((result) => {\r\n            if(result.status === 200) {\r\n                console.log('Alles in Ordnung');\r\n            } else {\r\n                console.log(`Error: ${result.message}`);\r\n            }\r\n            cb();\r\n        })\r\n    }\r\n\r\n    logout(cb) {\r\n        authenticated = false;\r\n        localStorage.clear();\r\n        cb();\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return authenticated;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React from 'react';\r\nimport Jdenticon from 'react-jdenticon';\r\nimport auth from '../../auth';\r\nimport { Typography, Button, Switch, ThemeProvider } from '@material-ui/core';\r\nimport './Header.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"head\">\r\n            <ThemeProvider theme={props.theme}>\r\n                <div className=\"userName\">\r\n                    <Jdenticon size=\"48\" value={props.value}/>\r\n                    <Typography className=\"typography\" variant=\"body1\" align=\"center\">{\"Hey, \" + props.value}</Typography>\r\n                </div>\r\n                <Typography variant=\"h3\">Lernplattform</Typography>\r\n                <div className=\"buttons\">\r\n                    <div style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"row\", alignItems: \"center\", marginRight: \"50px\"}}>\r\n                        <p className={props.variable === \"dark\" ? \"activeTheme\" : \"inactiveTheme\"}>Dark</p>\r\n                        <Switch className=\"btn\" color=\"default\" onChange={() => props.func()}/>\r\n                        <p className={props.variable === \"light\" ? \"activeTheme\" : \"inactiveTheme\"}>Light</p>\r\n                    </div>\r\n                    <Button className=\"btn\" onClick={() => {props.newTask()}}>Add Task</Button>\r\n                    <Button className=\"btn\" onClick={\r\n                        () => {\r\n                            auth.logout(() => {props.history.push(\"/login\")})\r\n                        }\r\n                    }>Logout</Button>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport './TaskCard.scss'\r\nimport { Typography } from '@material-ui/core';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst TaskCard = (props) => {\r\n\r\n    var f = props.active ? \"active\" : \"finished\";\r\n\r\n    return (\r\n        <div id=\"sample\" className={f + \" taskCard\"}>\r\n            <Typography variant=\"body2\">\r\n                <ReactMarkdown>{props.value.Text}</ReactMarkdown>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskCard;\r\n","import React, { Component } from 'react';\r\nimport TaskCard from '../taskCard/TaskCard';\r\nimport { ArrowForwardIos, ArrowBackIos } from '@material-ui/icons';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass TaskRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.navRef = React.createRef();\r\n        this.leftButton = React.createRef();\r\n        this.rightButton = React.createRef();\r\n    }\r\n\r\n    scrollLeft = function(element, change, duration) {\r\n        var start = element.scrollLeft,\r\n            currentTime = 0,\r\n            increment = 20;\r\n\r\n        Math.easeInOutQuad = function(t, b, c, d) {\r\n            t /= d/2;\r\n            if ( t<1 ) return c/2*t*t + b;\r\n            t--;\r\n            return -c/2 * (t*(t-2) - 1 ) + b;\r\n        };\r\n\r\n        var animateScroll = function() {\r\n            currentTime += increment;\r\n            var val = Math.easeInOutQuad(currentTime, start, change, duration);\r\n            element.scrollLeft = val;\r\n            if(currentTime < duration) {\r\n                setTimeout(animateScroll, increment)\r\n            }\r\n        }\r\n        animateScroll();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        var handleNav = (direction) => {\r\n            if (direction === 'left') {\r\n                this.scrollLeft(this.navRef.current, -700, 500);\r\n            } else {\r\n                this.scrollLeft(this.navRef.current, 700, 500);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"taskRow\">\r\n                <div><Button onClick={() => handleNav('left')} id=\"left-button\"><ArrowBackIos/></Button></div>\r\n                <div className=\"parent\" ref={this.navRef}>\r\n                    {this.props.tasks.filter(task => task.Topic === this.props.topic).map(a =>\r\n                        <div className=\"taskWrapper\" onClick={() => this.props.func(a)} id={a.ID} key={a.ID}>\r\n                            <TaskCard active={typeof this.props.statusArr !== 'undefined' ? !this.props.statusArr.get(a.ID) : true} className=\"child\" value={a}/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div><Button onClick={() => handleNav('right')} id=\"right-button\"><ArrowForwardIos/></Button></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskRow\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport './taskPage.scss';\r\nimport { Button, makeStyles, Fab, CircularProgress } from '@material-ui/core';\r\nimport Slider from 'react-animated-slider';\r\nimport 'react-animated-slider/build/horizontal.css';\r\nimport { ArrowBack, ArrowForwardIosOutlined, ArrowBackIosOutlined } from '@material-ui/icons';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { green } from '@material-ui/core/colors';\r\nimport SimpleImageSlider from 'react-simple-image-slider';\r\n\r\nfunction TaskPage(props) {\r\n\r\n    const [checkedState, setCheckedState] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        if(!checkedState) {\r\n            setLoading(true);\r\n            setStatus(props.task.ID, localStorage.getItem('userID'));\r\n        } else {\r\n            alert('Diese Aufgabe ist bereits bearbeitet. Eine weitere Statusänderung ist nicht möglich.');\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        },\r\n        wrapper: {\r\n          margin: theme.spacing(1),\r\n          position: 'relative',\r\n        },\r\n        buttonSuccess: {\r\n          backgroundColor: green[500],\r\n          '&:hover': {\r\n            backgroundColor: green[700],\r\n          },\r\n        },\r\n        fabProgress: {\r\n          color: green[500],\r\n          position: 'absolute',\r\n          top: -6,\r\n          left: -6,\r\n          zIndex: 1,\r\n        },\r\n        buttonProgress: {\r\n          color: green[500],\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          marginTop: -12,\r\n          marginLeft: -12,\r\n        },\r\n      }));\r\n\r\n    const setStatus = (taskID, userID) => {\r\n        const status = checkedState ? 0 : 1;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ taskID, userID, status })\r\n        }\r\n\r\n        const res = fetch('https://nicofreundt.ddns.net:3001/status/set', requestOptions).then(res => res.json());\r\n\r\n        res.then((result) => {\r\n            if(result.status !== 200) {\r\n                console.log(result.message);\r\n            } else {\r\n                setLoading(false);\r\n                setCheckedState(!checkedState);\r\n            }\r\n        })   \r\n    }\r\n    \r\n    useEffect(() => {\r\n        const getStatus = (taskID, userID) => {\r\n            //fetch status from backend\r\n    \r\n            const status = checkedState;\r\n    \r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-type': 'application/json' },\r\n                body: JSON.stringify({ taskID, userID, status })\r\n            }\r\n    \r\n            const res = fetch('https://nicofreundt.ddns.net:3001/status/get', requestOptions).then(res => res.json());\r\n    \r\n            res.then((result) => {\r\n                setCheckedState(result.status);\r\n                setLoading(false);\r\n            });\r\n        }\r\n        const getImages = async () => {\r\n            const res = await fetch(`https://nicofreundt.ddns.net:3001/images/paths/${props.task.ID}`).then(res => res.json());\r\n            console.log(res);\r\n            const arr = [];\r\n            for(var i of res) {\r\n                arr.push({url: \"https://nicofreundt.ddns.net:3001/images/\" + i.imagePath});\r\n\t\t\t\tconsole.log(i.imagePath);\r\n            }\r\n            setImages(arr);\r\n\t\t\tconsole.log(arr);\r\n        }\r\n        getStatus(props.task.ID, localStorage.getItem('userID'));\r\n        getImages();\r\n    }, [props.task.ID, checkedState]);\r\n\r\n    var task = props.task;\r\n\r\n    const classes = useStyles();\r\n\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: checkedState,\r\n        });\r\n\r\n    return (\r\n        <div className=\"taskPage\" style={{display: \"flex\", flexDirection: \"column\"}}>\r\n            <p className=\"textWrapper\">\r\n                <ReactMarkdown>{task.Text}</ReactMarkdown>\r\n            </p>\r\n            <h3 className=\"imageTitle\">Bilder und Grafiken</h3>\r\n            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                {images.length > 0 && <SimpleImageSlider width={896} height={504} images={images}/>}{/* \r\n                <Slider previousButton={<ArrowBackIosOutlined fontSize=\"large\"/>} nextButton={<ArrowForwardIosOutlined fontSize=\"large\"/>}>\r\n                    {images.map((image, index) => \r\n                        <div key={index}>\r\n                            <img src={\"https://nicofreundt.ddns.net:3001/images/\" + image.imagePath} alt={\"pic\" + index}></img>\r\n                        </div>)}\r\n                </Slider> */}\r\n            </div>\r\n            <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\r\n                <Button onClick={() => props.func(true)}><ArrowBack/>&nbsp;&nbsp;Back</Button>\r\n                {/* <FormControlLabel\r\n                    control={<Checkbox checked={state.checkedState} icon={<CheckCircleOutlineSharp />} checkedIcon={<CheckCircleSharp />} onChange={handleChange} name=\"checkedState\" />}\r\n                    label=\"Done\"\r\n                /> */}\r\n                <div className={classes.wrapper}>\r\n                    <Fab\r\n                    aria-label=\"save\"\r\n                    color=\"primary\"\r\n                    className={buttonClassname}\r\n                    onClick={handleChange}\r\n                    >\r\n                    {checkedState ? <CheckIcon /> : <SaveIcon />}\r\n                    </Fab>\r\n                    {loading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskPage;","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { PictureAsPdf, Description, Image, Close } from '@material-ui/icons';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport './newTask.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nfunction NewTask(props) {\r\n    const [fileName, setFileName] = React.useState('');\r\n    const [fileType, setFileType] = React.useState();\r\n    const [fileContent, setFileContent] = React.useState('');\r\n    const [level, setLevel] = React.useState('');\r\n    const [thema, setThema] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [uploading, setUploading] = React.useState(false);\r\n    const [test, setTest] = React.useState(new Map());\r\n\r\n    const classes = useStyles();\r\n\r\n    const test2 = async (event) => {\r\n        event.preventDefault();\r\n        setUploading(true);\r\n\r\n        var images = new FormData();\r\n        for(var [, value] of test.entries()) {\r\n            if(value.type.includes('image')) images.append(value.type, value);\r\n        }\r\n\r\n        if(fileName !== '' && level !== '' && thema !== '') {\r\n            const res = await uploadImages(images).then(r => r.json());\r\n            console.log(res);\r\n            await newTask(images, res);\r\n            setUploading(false);\r\n            alert(\"Task successfully uploaded\");\r\n        } else {\r\n            setUploading(false);\r\n            alert(\"Check your Input\");\r\n        }\r\n    }\r\n\r\n    const newTask = async (images, imageNames) => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ Titel: fileName, Text: fileContent, Level: level, Thema: thema, Images: imageNames })\r\n        }\r\n        const res = await fetch('https://nicofreundt.ddns.net:3001/tasks/new', options).then(res => res.json());\r\n\r\n        return res;\r\n    }\r\n\r\n    const uploadImages = async (images) => {\r\n        const options = {\r\n            method: 'POST',\r\n            body: images\r\n        }\r\n        const res = await fetch('https://nicofreundt.ddns.net:3001/images/upload', options)\r\n\r\n        return res;\r\n    }\r\n\r\n    const handleChangeLevel = (event) => {\r\n        setLevel(event.target.value);\r\n    }\r\n\r\n    const handleChangeThema = (event) => {\r\n        setThema(event.target.value);\r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        setLoading(true)\r\n        acceptedFiles.forEach((file) => {\r\n            setFileType(file.name.split('.')[1])\r\n            console.log(file.type)\r\n            const fi = test;\r\n            fi.set(file.name, file);\r\n            setTest(fi);\r\n            if(file.type === \"text/plain\" || file.type === \"text/html\") {\r\n                setFileName(file.name.split('.')[0])\r\n                const reader = new FileReader()\r\n\r\n                reader.onabort = () => console.log('file reading was aborted')\r\n                reader.onerror = () => console.log('file reading has failed')\r\n                reader.onload = () => {\r\n                    // Do whatever you want with the file contents\r\n                    const binaryStr = reader.result\r\n                    setFileContent(binaryStr)\r\n                    setLoading(false)\r\n                }\r\n                reader.readAsText(file)\r\n            }\r\n        })\r\n        setLoading(false);\r\n    }, [test])\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <>\r\n        {\r\n            uploading ?\r\n\r\n            <CircularProgress />\r\n\r\n            :\r\n\r\n            <div className=\"root\">\r\n                <Button className=\"exitButton\" onClick={() => props.closeNewTask()}><Close/> Zurück</Button>\r\n                <div className=\"taskDisplay\">\r\n                    {fileName && (loading ? <CircularProgress/> : <>\r\n                        {fileType != null && (fileType === 'pdf' ? <PictureAsPdf fontSize=\"large\"/> : <Description fontSize=\"large\"/>)}\r\n                    </>)}\r\n                    {fileName && fileName}\r\n                </div>\r\n                <div className=\"inputSelectorBox\">\r\n                    <FormControl className={\"inputSelector \" + classes.FormControl}>\r\n                        <InputLabel id=\"demo-simple-selected-label\">Thema</InputLabel>\r\n                        <Select \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={thema}\r\n                            onChange={handleChangeThema}\r\n                        >\r\n                            <MenuItem value=\"Python\">Python</MenuItem>\r\n                            <MenuItem value=\"Java\">Java</MenuItem>\r\n                            <MenuItem value=\"DB\">DB</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={\"inputSelector \" + classes.FormControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                        <Select \r\n                            labelId=\"demo-simple-selec-label\"\r\n                            id=\"demo-simple-selec\"\r\n                            value={level}\r\n                            onChange={handleChangeLevel}\r\n                        >\r\n                            <MenuItem value=\"Anfänger\">Anfänger</MenuItem>\r\n                            <MenuItem value=\"Fortgeschritten\">Fortgeschritten</MenuItem>\r\n                            <MenuItem value=\"Profi\">Profi</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <form className=\"dropForm\" onSubmit={(e) => test2(e)}>\r\n                    <p>Text: </p>\r\n                    <div {...getRootProps()} className=\"dropBox\">\r\n                        <input name=\"textFile\" {...getInputProps()} />\r\n                        <div>\r\n                            {Array.from(test).filter(([key, value]) => value.type.includes('text')).length === 0 && <p>Drag 'n' drop some files here, or click to select files</p>}\r\n                            {test && Array.from(test).filter(([key, value]) => value.type.includes('text')).map(([key, value]) => <p className=\"imageListElement\" key={key}><Description/> - {value.name.split('.')[0]}</p>)}\r\n                        </div>\r\n                    </div>\r\n                    <p>Images: </p>\r\n                    <div {...getRootProps()} className=\"dropBox\">\r\n                        <input name=\"textFile\" {...getInputProps()} />\r\n                        <div>\r\n                            {Array.from(test).filter(([key, value]) => value.type.includes('image')).length === 0 && <p>Drag 'n' drop some files here, or click to select files</p>}\r\n                            {test && Array.from(test).filter(([key, value]) => value.type.includes('image')).map(([key, value]) => <p className=\"imageListElement\" key={key}><Image/>  - {value.name.split('.')[0]}</p>)}\r\n                        </div>\r\n                    </div>\r\n                    <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Upload</Button>\r\n                </form>\r\n            </div>\r\n\r\n        }\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewTask;","import React, { Component } from 'react';\r\nimport './Content.scss';\r\nimport { CircularProgress, Box, Typography } from '@material-ui/core';\r\nimport TaskRow from '../taskRow/TaskRow';\r\nimport TaskPage from '../taskPage/TaskPage';\r\nimport NewTask from '../newTask/newTask';\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    return (\r\n      <Box position=\"relative\" display=\"inline-flex\" style={{marginLeft: \"25px\"}}>\r\n        <CircularProgress variant=\"static\" {...props} />\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            isLoading: true,\r\n            task: null,\r\n            selected: false,\r\n            status: [],\r\n            updated: false,\r\n            newTask: props.newTask\r\n        };\r\n\r\n        this.navRef = React.createRef();\r\n    }\r\n\r\n    setNewTask() {\r\n        this.setState({newTask: true});\r\n        console.log(\"Hallo\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://nicofreundt.ddns.net:3001/tasks/${this.props.topic}`)\r\n            .then(res => res.json())    \r\n            .then(aufgaben => this.setState({ tasks: aufgaben }));\r\n        fetch(`https://nicofreundt.ddns.net:3001/status/get/${localStorage.getItem('userID')}`)\r\n            .then(res => res.json())\r\n            .then(status => this.setState({ status: status, isLoading: false }));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.state.isLoading) {\r\n            fetch(`https://nicofreundt.ddns.net:3001/tasks/${this.props.topic}`)\r\n                .then(res => res.json())    \r\n                .then(aufgaben => this.setState({ tasks: aufgaben }));\r\n            fetch(`https://nicofreundt.ddns.net:3001/status/get/${localStorage.getItem('userID')}`)\r\n                .then(res => res.json())\r\n                .then(status => this.setState({ status: status, isLoading: false }));\r\n        }\r\n    }\r\n\r\n    handleNav = (direction) => {\r\n        if (direction === 'left') {\r\n            this.navRef ? (this.navRef.current.scrollLeft -= 200) : console.log('');\r\n        } else {\r\n            this.navRef ? (this.navRef.current.scrollLeft += 200) : console.log('');\r\n        }\r\n    }\r\n\r\n    selectedTask = (t) => {\r\n        this.setState({task: t, selected: true});\r\n    }\r\n\r\n    unselectTask = (x) => {\r\n        if(x) {\r\n            this.setState({isLoading: true});\r\n        };\r\n        this.setState({task: null, selected: false});\r\n    }\r\n\r\n    render() {\r\n        const tasks = this.state.tasks;\r\n        const status = this.state.status;\r\n        const isLoading = this.state.isLoading;\r\n        var level = '';\r\n\r\n        var arr = [];\r\n        var arrS = [];\r\n        var arrM = [];\r\n        var levelNames = ['Anfänger', 'Fortgeschritten', 'Profi'];\r\n\r\n        for (let i in levelNames) {\r\n            var helpArray = tasks.filter(task => task.Topic === this.props.topic).filter(task => task.Level === levelNames[i]);\r\n            var helpArrayS;\r\n            if(status.length !== 0) {\r\n                helpArrayS = status.filter(st => st.topic === this.props.topic).filter(s => s.level === levelNames[i]);\r\n                var numPos = 0;\r\n                var myMap = new Map();\r\n                if(helpArrayS.length !== 0) {\r\n                    for(let i of helpArrayS) {\r\n                        if(i.status !== 0) {\r\n                            numPos = numPos + 1;\r\n                        }\r\n                        myMap.set(i.id, i.status); \r\n                    }\r\n                    arrM[i] = myMap;\r\n                    arrS[i] = Math.round((numPos / helpArray.length) * 100);\r\n                };\r\n            }\r\n            if(helpArray.length !== 0) arr[i] = helpArray;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={this.props.value !== this.props.index}\r\n                id={`vertical-tabpanel-${this.props.index}`}\r\n                aria-labelledby={`vertical-tab-${this.props.index}`}\r\n                {...this.props.other}\r\n                style={{marginLeft: '225px'}}\r\n                >\r\n                {this.props.value === this.props.index && (\r\n                    <div>\r\n                        {isLoading?\r\n                            <CircularProgress style={{marginTop: '25%'}}/>\r\n                            :\r\n                            <div>\r\n                                {this.state.newTask ? <NewTask closeNewTask={this.props.closeNewTask}/> : \r\n                                <>{this.state.selected ? \r\n                                    <div>\r\n                                        <TaskPage task={this.state.task} func={this.unselectTask}/>\r\n                                    </div>\r\n                                :\r\n                                    <>{arr.length !== 0 ? \r\n                                        <>{arr.map((task, index) => \r\n                                            <div key={task[0].ID}>\r\n                                                {task[0].Level !== level ?\r\n                                                    <h1 className=\"headLine\">{level = task[0].Level}<CircularProgressWithLabel value={typeof arrS[index] !== 'undefined' ? arrS[index] : 0}/></h1>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                <div className=\"task-container\">\r\n                                                    <TaskRow statusArr={arrM[index]} func={this.selectedTask} topic={this.props.topic} tasks={task}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}</>\r\n                                        : \r\n                                        <div style={{display: \"flex\", justifyContent: \"center\", alignContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"25%\"}}>COULD NOT LOAD ANY TASKS</div>\r\n                                    }</>\r\n                                }</>}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n        \r\n    };\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './Menu.scss';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Content from '../content/Content';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `vertical-tab-${index}`,\r\n      'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingTop: \"80px\",\r\n    },\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n      zIndex: 2\r\n    },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n            orientation=\"vertical\"\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"Vertical tabs example\"\r\n            className={classes.tabs + ' menu'}>\r\n                <Tab className=\"firstOne\" label={<b>Python</b>} {...a11yProps(0)}></Tab> \r\n                <Tab label={<b>Java</b>} {...a11yProps(1)}></Tab>\r\n                <Tab label={<b>DB</b>} {...a11yProps(2)}></Tab>\r\n                <Tab label={<b>Something</b>} {...a11yProps(3)}></Tab>\r\n                <Tab label={<b>Something else</b>} {...a11yProps(4)}></Tab>\r\n            </Tabs>\r\n            \r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 1} topic=\"Python\" value={value} index={0}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 3} topic=\"Java\" value={value} index={1}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 5} topic=\"DB\" value={value} index={2}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 7} topic=\"Something\" value={value} index={3}></Content>\r\n            <Content closeNewTask={props.closeNewTask} newTask={props.newTask} key={props.newTask + 9} topic=\"SomethingElse\" value={value} index={4}></Content>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/header/Header';\nimport Menu from './components/menu/Menu';\nimport { withRouter } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      themeVariable: 'dark',\n      newTask: false\n    }\n  }\n\n  render() {\n    var darkTheme = createMuiTheme({\n      palette: {\n          primary: {\n              main: '#18FFFF',\n              dark: '',\n          },\n          secondary: {\n              main: '#18FFFF',\n              dark: '',\n          },\n          type: 'dark'\n      }\n    })\n\n    var lightTheme = createMuiTheme({\n      palette: {\n          primary: {\n              main: '#E20074',\n              dark: '',\n          },\n          secondary: {\n              main: '#E20074',\n              dark: '',\n          },\n          type: 'light'\n      }\n    })\n\n    document.body.classList.add(this.state.themeVariable);\n\n    var themeChange = () => {\n      document.body.classList.remove(this.state.themeVariable);\n      this.state.themeVariable === 'dark' ? this.setState({themeVariable: 'light'}) : this.setState({themeVariable: 'dark'});\n    }\n\n    var setNewTask = () => {\n      this.setState({newTask: !this.state.newTask});\n    }\n    \n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={darkTheme}>\n          <Header variable={this.state.themeVariable} theme={darkTheme} func={themeChange} newTask={setNewTask} className=\"head\" value={localStorage.getItem('user')}/>\n        </ThemeProvider>\n        {this.state.themeVariable === 'dark' ?\n          <ThemeProvider theme={darkTheme}>\n            <Menu closeNewTask={setNewTask} newTask={this.state.newTask} className=\"menu\"/>\n          </ThemeProvider>\n        :\n          <ThemeProvider theme={lightTheme}>\n            <Menu closeNewTask={setNewTask} newTask={this.state.newTask} className=\"menu\"/>\n          </ThemeProvider>\n        }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);","import React, { useState } from 'react';\r\nimport './Login.scss';\r\nimport { TextField, Typography, Button, Switch } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { AccountCircle, Lock, Mail } from '@material-ui/icons/';\r\nimport auth from '../../auth';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [mail, setMail] = useState('');\r\n    const [switchStatus, setSwitchStatus] = useState(false);\r\n\r\n    const handleChangeUser = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const handleChangePW = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleChangeMail = (e) => {\r\n        setMail(e.target.value);\r\n    }\r\n\r\n    const handleChangeSwitch = (event) => {\r\n        setSwitchStatus(event.target.checked);\r\n    }\r\n\r\n    const login = () => {\r\n        auth.login(() => {\r\n            props.history.push(`/`);\r\n        }, username, password)\r\n    }\r\n\r\n    const signup = () => {\r\n        auth.signup(() => {\r\n            //props.history.push('/login');\r\n        }, username, password, mail);\r\n        alert(`username: ${username}\\npassword: ${password}\\nmail: ${mail}`);\r\n        setSwitchStatus(false);\r\n    }\r\n\r\n    const handleKeyUp = (event) => {\r\n        if(event.key === \"Enter\") {\r\n            login();\r\n        }\r\n    }\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#18FFFF',\r\n                dark: '',\r\n            },\r\n            secondary: {\r\n                main: '#18FFFF',\r\n                dark: '',\r\n            },\r\n            type: 'dark'\r\n        }\r\n    })\r\n\r\n    if (localStorage.getItem('user')) {\r\n        return <Redirect to={\r\n            {\r\n                pathname: \"/\",\r\n                state: {\r\n                    from: props.location\r\n                }\r\n            }\r\n        }/>\r\n    } else {\r\n        return (\r\n            <div className=\"logPage\">\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h1\">Login Page</Typography>\r\n                    <div className=\"form\">\r\n                        <div className=\"lsSwitch\">\r\n                            <Typography>Login</Typography>\r\n                            <Switch\r\n                                checked={switchStatus}\r\n                                onChange={handleChangeSwitch}\r\n                            />\r\n                            <Typography>Sign Up</Typography>\r\n                        </div>\r\n                        <div>\r\n                            <AccountCircle/>\r\n                            <TextField label=\"Username\" value={username} onChange={handleChangeUser}/>\r\n                        </div>\r\n                        <div>\r\n                            <Lock/>\r\n                            <TextField onKeyUp={handleKeyUp} type=\"password\" label=\"Password\" value={password} onChange={handleChangePW}/>\r\n                        </div>\r\n                        {switchStatus &&\r\n                            <div>\r\n                                <Mail/>\r\n                                <TextField label=\"E-Mail\" value={mail} onChange={handleChangeMail}/>\r\n                            </div>\r\n                        }\r\n                        <Button onClick={switchStatus ? signup : login} variant=\"outlined\" color=\"primary\">Submit</Button>\r\n                    </div>\r\n                </ThemeProvider>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { authenticated } from '../../auth';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (authenticated || localStorage.getItem('user')) {\r\n                    return <Component {...props}/>\r\n                } else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    }/>\r\n                }\r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './components/login/Login';\nimport ProtectedRoute from './components/protectedRoute/ProtectedRoute';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <div className=\"every\">\n    <Router>\n      <Switch>\n        <Route className=\"all\" exact path=\"/login\" component={Login}/>\n        <ProtectedRoute exact path=\"/\" component={App}/>\n        <Route path=\"*\" component={() => <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>404 NOT FOUND</div>}/>\n      </Switch>\n    </Router>\n  </div>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}